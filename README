The simppl C++ library provides high-level abstraction layers by using solely
the C++ language and compiler for the definition of domain specific languages
in the following functional domains: 

 * generative commandline parser framework
 * generative inifile parser framework
 * generative service-oriented IPC library introducing a C++ embedded DSL for 
   the definition of service interfaces and serializable data structures.


Compilers:

Well, I only developed on GCC >4.6 and clang/LLVM 3.4. Due to the heavy 
usage of templating techniques and C++11 language features I cannot 
guarantee that any of the code fragments will work with other compilers 
(especially VS compiler).

For structure serialization boost::fusion can be used. See benchmark example
for more information how to serialize structures when sending remote messages.
The boost way is the formal and correct way to serialize structures. The old
way of defining serializer_type's within structures is no longer recommended
since that one makes heavy use of C++ language to memory mappings and will 
definitely not work with complex data types containing virtual functions or 
containing multiple inheritence.


Status:

Most of the source is rapid prototyping. It may work or it may not. Feel 
free to make a real good project from any of the parts. I plan to make 
all parts of simppl fully operable but I can't tell you when this happens.


CopyLeft:

Feel free to do with the code whatever you want. It's free open-source code. 
